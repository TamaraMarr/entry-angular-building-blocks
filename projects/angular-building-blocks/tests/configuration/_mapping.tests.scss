@use '../../node_modules/sass-true/sass/true';
@use '../../styles/modules/variables';
@use '../../styles/modules/configuration';
@use '../../styles/modules/themings/default-theming' as default;

variables.$testing: true;
$theme: default.$theme;

@include true.describe('value-from(object, path)') {
	@include true.it('should throw if object is not a map') {
		$expected-message: 'Please provide valid object! Given value: ';
		@include true.assert-equal(configuration.value-from('5', 'table.row.odd-even-row'), $expected-message + '5');
		@include true.assert-equal(configuration.value-from(null, 'table.row.odd-even-row'), $expected-message);
		@include true.assert-equal(configuration.value-from(#FFEEAA, 'table.row.odd-even-row'), $expected-message + '#FFEEAA');
	}

    @include true.it('should throw if path is not a string') {
		$expected-message: 'Please provide valid path! Given value: ';
		@include true.assert-equal(configuration.value-from($theme, 46), $expected-message + '46');
		@include true.assert-equal(configuration.value-from($theme, null), $expected-message);
		@include true.assert-equal(configuration.value-from($theme, #000), $expected-message + '#000');
	}

    @include true.it('should provide object and path') {
		@include true.assert-equal(configuration.value-from($theme, 'table.row.odd-even-row'),'even');
	}

    @include true.it('should throw if path is incorrect') {
		@include true.assert-equal(configuration.value-from($theme, 'table.dog'), 'Path segment must be any of following values: cell, row, column, content. Given path segment: dog');
		@include true.assert-equal(configuration.value-from($theme, 'table.content.no-result.cat'), 'Path segment must be any of following values: font-size, font-weight, text-transform. Given path segment: cat');
	}
    
}